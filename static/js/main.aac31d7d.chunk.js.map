{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","aria-checked","onClick","togglemode","htmlFor","Textform","_useState","useState","_useState2","_slicedToArray","text","settext","heading","style","backgroundColor","color","value","onChange","event","target","rows","newtext","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","showalert","split","join","length","Alert","alert","msg","defaultProps","App","setmode","_useState3","_useState4","setalert","Fragment","body","message","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.aac31d7d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from 'react-router-dom';\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">\r\n                About\r\n              </Link>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\" role=\"search\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form> */}\r\n          <div className=\"form-check form-switch mx-3\" >\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" aria-checked=\"true\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n  <label className={`form-check-label text-${props.mode==='light'?'dark':'light'}`} htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n</div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\nNavbar.defaultProps = {\r\n  title: \"set title here\",\r\n};\r\n","import React, { useState } from \"react\";\r\nexport default function Textform(props) {\r\n  const handleupclick = () => {\r\n    let newtext = text.toUpperCase();\r\n    settext(newtext);\r\n  };\r\n  const handledownclick = () => {\r\n    let newtext = text.toLowerCase();\r\n    settext(newtext);\r\n  };\r\n  const handleextraspaces = () => {\r\n    let newtext = text.split(/[ ]+/);\r\n    settext(newtext.join(\" \"));\r\n  };\r\n  const handleclear = () => {\r\n    settext(\"\");\r\n  };\r\n  const handlecopy = () => {\r\n    var text=document.getElementById(\"copy\");\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showalert(\"Copied to clipboard\",\"Success\");\r\n  };\r\n  const handleOnChange = (event) => {\r\n    settext(event.target.value);\r\n  };\r\n  const [text, settext] = useState(\"\");\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <h2 className={`my-3 text-${props.mode==='light'?'dark':'light'}`}>{props.heading}</h2>\r\n        <textarea\r\n          className=\"form-control \"\r\n          style={{backgroundColor:props.mode==='dark'?'#3F4E4F':'white' ,color:props.mode==='dark'?'white':'black'}}\r\n          value={text}\r\n          onChange={handleOnChange}\r\n          id=\"copy\"\r\n          rows=\"5\"\r\n        ></textarea>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleupclick}>\r\n          Convert to Uppercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handledownclick}>\r\n          Convert to Lowercase\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleclear}>\r\n          Clear\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handlecopy} >\r\n          Copy\r\n        </button>\r\n        <button className=\"btn btn-primary my-3 mx-2\" onClick={handleextraspaces} >\r\n          Remove Extra Spaces\r\n        </button>\r\n      </div>\r\n      <div className={`container text-${props.mode==='light'?'dark':'light'}`}>\r\n        <h2>Summary</h2>\r\n        <p>{text.split(\" \").length}: Words {text.length}: characters</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n      props.alert && <div className=\"alert alert-success d-flex align-items-center\" role=\"alert\">\r\n  <strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>\r\n  )\r\n}\r\n","import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\n// import About from \"./components/About\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter,\n//   Routes,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\nconst[mode,setmode]=useState('light');\nconst[alert,setalert]=useState(null);\nconst showalert =(message,type)=>{\n  setalert({\n    msg:message,\n    type:type,\n  })\n  setTimeout(() => {\n    setalert(null)\n  }, 1500);\n}\nconst togglemode=()=>{\n  if(mode==='light'){\n    setmode('dark');\n    document.body.style.backgroundColor='#3F4E4F';\n    document.title=\"Textutils-Dark mode\";\n  }\n  else{\n    setmode('light');\n    document.body.style.backgroundColor='white';\n  }\n}\n  return (\n    <>\n    {/* <BrowserRouter> */}\n      <Navbar title=\"Textutils\" mode={mode} togglemode={togglemode}/>\n      <Alert alert={alert}/>\n      <div className=\"container my-3\">\n      {/* <Routes>\n          <Route exact path=\"/about\"\n           element={<About/>}>\n          </Route>\n          <Route exact path=\"/\"  */}\n          {/* element= */}\n          {<Textform showalert={showalert} heading=\"Enter the text to anzalyze\" mode={mode}/>}\n          {/* > */}\n          {/* </Route>\n        </Routes> */}\n      </div>\n      {/* </BrowserRouter> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}